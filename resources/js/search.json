[[{"l":"module_lang"}],[{"l":"Jigsaw Docs Starter Template","p":["This is a starter template for creating a beautiful, customizable documentation site for your project with minimal effort. You’ll only have to change a few settings and you’re ready to go.","View a preview of the docs template."]},{"l":"Installation","p":["After installing Jigsaw, run the following command from your project directory:","This starter template includes samples of common page types, and comes pre-configured with:","A fully responsive navigation bar","A sidebar navigation menu","Tailwind CSS, a utility CSS framework that allows you to customize your design without touching a line of CSS","Purgecss to remove unused selectors from your CSS, resulting in smaller CSS files","Syntax highlighting using highlight.js","A script that automatically generates a sitemap.xml file","A search bar powered by Algolia DocSearch, and instructions on how to get started with their free indexing service","A custom 404 page","Docs starter template screenshot"]},{"l":"Configuring your new site","p":["As with all Jigsaw sites, configuration settings can be found in config.php; you can update the variables in that file with settings specific to your project. You can also add new configuration variables there to use across your site; take a look at the Jigsaw documentation to learn more.","Tip: This configuration file is also where you’ll define any \"collections\" (for example, a collection of the contributors to your site, or a collection of blog posts). Check out the official Jigsaw documentation to learn more."]},{"l":"Adding Content","p":["You can write your content using a variety of file types. By default, this starter template expects your content to be located in the source/docs folder. If you change this, be sure to update the URL references in navigation.php.","The first section of each content page contains a YAML header that specifies how it should be rendered. The title attribute is used to dynamically generate HTML title and OpenGraph tags for each page. The extends attribute defines which parent Blade layout this content file will render with (e.g. _layouts.documentation will render with source/_layouts/documentation.blade.php), and the section attribute defines the Blade \"section\" that expects this content to be placed into it.","Read more about Jigsaw layouts."]},{"l":"Adding Assets","p":["Any assets that need to be compiled (such as JavaScript, Less, or Sass files) can be added to the source/_assets/ directory, and Laravel Mix will process them when running npm run dev or npm run prod. The processed assets will be stored in /source/assets/build/(note there is no underscore on this second assets directory).","Then, when Jigsaw builds your site, the entire /source/assets/ directory containing your built files (and any other directories containing static assets, such as images or fonts, that you choose to store there) will be copied to the destination build folders ( build_local, on your local machine).","Files that don't require processing (such as images and fonts) can be added directly to /source/assets/.","Read more about compiling assets in Jigsaw using Laravel Mix."]},{"l":"Building Your Site","p":["Now that you’ve edited your configuration variables and know how to customize your styles and content, let’s build the site."]}],[{"i":"#","p":["About Lang"]},{"l":"module_lang","p":["Il modulo Lang è il modulo che si occupa delle traduzioni nelle varie lingue nel progetto."]}],[{"i":"#","p":["Configure Algolia DocSearch with the Jigsaw docs starter template"]},{"l":"Algolia DocSearch","p":["This starter template includes support for DocSearch, a documentation indexing and search tool provided by Algolia for free. To configure this tool, you’ll need to sign up with Algolia and set your API Key and index name in config.php. Algolia will then crawl your documentation regularly, and index all your content.","Get your DocSearch credentials here.","Once the docsearchApiKey and docsearchIndexName values are set in config.php, the search field at the top of the page is ready to use.","To help Algolia index your pages correctly, it's good practice to add a unique id or name attribute to each heading tag ( h1, h2, etc.). By doing so, a user will be taken directly to the appropriate section of the page when they click a search result."]},{"i":"algolia-adding-custom-styles","l":"Adding Custom Styles","p":["If you'd like to customize the styling of the search results, Algolia exposes custom CSS classes that you can modify:","For more details, visit the official Algolia DocSearch documentation."]}],[{"i":"#","p":["Custom 404 pages with Jigsaw docs starter template"]},{"l":"Custom 404 Page","p":["This starter template includes a custom 404 Not Found error page, located at /source/404.blade.php. To preview the 404 page, you can visit /404 in your browser.","Depending on where your site is hosted, you may need to configure your server to use the custom 404 page. For more details, visit the Jigsaw documentation about configuring a custom 404 page."]}],[{"i":"#","p":["Getting started with Jigsaw's docs starter template is as easy as 1, 2, 3."]},{"l":"Getting Started","p":["This is a starter template for creating a beautiful, customizable documentation site for your project with minimal effort. You’ll only have to change a few settings and you’re ready to go."]},{"i":"getting-started-configuration","l":"Configuration","p":["As with all Jigsaw sites, configuration settings can be found in config.php; you can update the variables in that file with settings specific to your project. You can also add new configuration variables there to use across your site; take a look at the Jigsaw documentation to learn more.","Tip: This configuration file is also where you’ll define any \"collections\" (for example, a collection of the contributors to your site, or a collection of blog posts). Check out the official Jigsaw documentation to learn more."]},{"i":"getting-started-adding-content","l":"Adding Content","p":["You can write your content using a variety of file types. By default, this starter template expects your content to be located in the source/docs folder. If you change this, be sure to update the URL references in navigation.php.","Read more about navigation.","The first section of each content page contains a YAML header that specifies how it should be rendered. The title attribute is used to dynamically generate HTML title and OpenGraph tags for each page. The extends attribute defines which parent Blade layout this content file will render with (e.g. _layouts.documentation will render with source/_layouts/documentation.blade.php), and the section attribute defines the Blade \"section\" that expects this content to be placed into it.","Read more about Jigsaw layouts."]},{"i":"getting-started-adding-assets","l":"Adding Assets","p":["Any assets that need to be compiled (such as JavaScript, Less, or Sass files) can be added to the source/_assets/ directory, and Laravel Mix will process them when running npm run dev or npm run prod. The processed assets will be stored in /source/assets/build/(note there is no underscore on this second assets directory).","Then, when Jigsaw builds your site, the entire /source/assets/ directory containing your built files (and any other directories containing static assets, such as images or fonts, that you choose to store there) will be copied to the destination build folders ( build_local, on your local machine).","Files that don't require processing (such as images and fonts) can be added directly to /source/assets/.","Read more about compiling assets in Jigsaw using Laravel Mix."]},{"i":"getting-started-building-your-site","l":"Building Your Site","p":["Now that you’ve edited your configuration variables and know how to customize your styles and content, let’s build the site."]}],[{"i":"#","p":["Building a navigation menu for your site"]},{"l":"Navigation","p":["The navigation menu in the left-hand sidebar is defined using an array in navigation.php. Nested pages can be added by using the children associative array."]}]]